<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhskg.bag.mapper.UserDeviceMapper">
    <resultMap id="userDeviceMap" type="com.zhskg.bag.entity.UserDevice">
        <id column="id"  property="id"/>
        <result column="device_name"  property="deviceName"/>
        <result column="client_id" property="clientId" />
        <result column="product_name" property="productName"/>
        <result column="product_code" property="productCode"/>
        <result column="stock_id" property="stockId"/>
        <result column="default_flag" property="defaultFlag"/>
        <result column="user_id" property="userId"/>
        <result column="customer_id"  property="customerId"/>
        <result column="auth_type" property="authType"/>
        <result column="port" property="port"/>
        <result column="mac" property="mac"/>
        <result column="conn_pwd" property="connPwd"/>
        <result column="create_time" property="createTime"/>
        <result column="remark" property="remark"/>
        <result column="nameplate" property="nameplate"/>
    </resultMap>
    <!--数据库字段-->
    <insert id="add" parameterType="com.zhskg.bag.entity.UserDevice">
        INSERT INTO tu_user_device (device_name,client_id,product_name,product_code,stock_id,default_flag,user_id,customer_id,auth_type,port,mac,conn_pwd,create_time,remark,nameplate) VALUES (
        #{deviceName},#{clientId},#{productName},#{productCode},#{stockId},#{defaultFlag},
        #{userId},#{customerId}, #{authType},
        #{port},#{mac},#{connPwd},#{createTime},#{remark},#{nameplate}
        )
        <selectKey order="AFTER" keyProperty="id" resultType="java.lang.Integer">SELECT @@IDENTITY as id
        </selectKey>
    </insert>

    <update id="update" parameterType="map">
        UPDATE tu_user_device
        <trim prefix="set" suffixOverrides=",">
            <if test="_parameter.containsKey('userId')">
                user_id = #{userId},
            </if>
            <if test="_parameter.containsKey('createTime')">
                create_time = #{createTime},
            </if>
            <if test="_parameter.containsKey('deviceName')">
                device_name = #{deviceName},
            </if>
            <if test="_parameter.containsKey('defaultFlag')">
                default_flag = #{defaultFlag},
            </if>
            <if test="_parameter.containsKey('remark')">
                remark = #{remark},
            </if>
            <if test="_parameter.containsKey('nameplate')">
                nameplate = #{nameplate}
            </if>
        </trim>
        where id = #{id}
    </update>

    <update id="setDefault" parameterType="map">
        UPDATE tu_user_device SET  default_flag = #{defaultFlag} WHERE user_id = #{userId}
    </update>

    <delete id="deleteReal" parameterType="int">
        DELETE FROM tu_user_device WHERE id=#{id}
    </delete>

    <select id="get" parameterType="int" resultMap="userDeviceMap">
        SELECT * FROM tu_user_device WHERE id = #{id}
    </select>

    <select id="getList" resultMap="userDeviceMap" parameterType="map">
        SELECT * FROM tu_user_device
        <where>
            <if test="_parameter.containsKey('userId')">
                AND user_id = #{userId}
            </if>
            <if test="_parameter.containsKey('clientId')">
                AND client_id LIKE '%${clientId}%'
            </if>
            <if test="_parameter.containsKey('remark')">
                AND remark LIKE '%${remark}%'
            </if>
            <if test="_parameter.containsKey('nameplate')">
                AND nameplate LIKE '%${nameplate}%'
            </if>
            <if test="_parameter.containsKey('stockId')">
                AND stock_id = #{stockId}
            </if>
            <if test="_parameter.containsKey('authType')">
                AND auth_type = #{authType}
            </if>
            <if test="_parameter.containsKey('customerId')">
                AND customer_id = #{customerId}
            </if>
            <if test="_parameter.containsKey('defaultFlag')">
                AND default_flag = #{defaultFlag}
            </if>

        </where>
        <if test="_parameter.containsKey('start')&amp;&amp;start!=''&amp;&amp;start!=null&amp;&amp;_parameter.containsKey('end')&amp;&amp; end!=''&amp;&amp;end!=null">
            LIMIT #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" parameterType="map" resultType="int">
        select count(*) from tu_user_device
        <where>
            <if test="_parameter.containsKey('userId')">
                AND user_id = #{userId}
            </if>
            <if test="_parameter.containsKey('clientId')">
                AND client_id LIKE '%${clientId}%'
            </if>
            <if test="_parameter.containsKey('remark')">
                AND remark LIKE '%${remark}%'
            </if>
            <if test="_parameter.containsKey('nameplate')">
                AND nameplate LIKE '%${nameplate}%'
            </if>
            <if test="_parameter.containsKey('stockId')">
                AND stock_id = #{stockId}
            </if>
            <if test="_parameter.containsKey('authType')">
                AND auth_type = #{authType}
            </if>
            <if test="_parameter.containsKey('customerId')">
                AND customer_id = #{customerId}
            </if>
        </where>
    </select>
</mapper>