<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhskg.bag.mapper.RoleMapper">
    <resultMap id="roleMap" type="com.zhskg.bag.entity.Role">
        <id column="role_id" jdbcType="BIGINT" property="roleId" />
        <result column="role_name" jdbcType="VARCHAR" property="roleName" />
        <result column="role_code" jdbcType="VARCHAR" property="roleCode"/>
        <result column="enable_flag" jdbcType="INTEGER" property="enableFlag" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
        <result column="create_on" jdbcType="BIGINT" property="createOn" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="modify_on" jdbcType="BIGINT" property="modifyOn" />
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime" />
    </resultMap>
    <!--数据库字段-->
    <sql id="columns"> 
        role_id,
        role_name,
        role_code,
        enable_flag,
        comment,
        delete_flag,
        create_on,
        create_time,
        modify_on,
        modify_time
    </sql>
    <!--插入记录-->
    <insert id="add" parameterType="com.zhskg.bag.entity.Role">
        INSERT INTO ts_role ( 
        <include refid="columns"/>
        ) VALUES (
        #{roleId, jdbcType=BIGINT},
        #{roleName, jdbcType=VARCHAR},
        #{roleCode,jdbcType=VARCHAR},
        #{enableFlag, jdbcType=INTEGER},
        #{comment, jdbcType=VARCHAR},
        #{deleteFlag, jdbcType=INTEGER},
        #{createOn, jdbcType=BIGINT},
        #{createTime, jdbcType=BIGINT},
        #{modifyOn, jdbcType=BIGINT},
        #{modifyTime, jdbcType=BIGINT}
        )
    </insert>
    <!--插入记录并返回主键(主键必须是自增列)-->
    <insert id="addAndId" parameterType="com.zhskg.bag.entity.Role">
        INSERT INTO ts_role ( 
        <include refid="columns"/>
        ) VALUES (
        #{roleId, jdbcType=BIGINT},
        #{roleName, jdbcType=VARCHAR},
        #{roleCode,jdbcType=VARCHAR},
        #{enableFlag, jdbcType=INTEGER},
        #{comment, jdbcType=VARCHAR},
        #{deleteFlag, jdbcType=INTEGER},
        #{createOn, jdbcType=BIGINT},
        #{createTime, jdbcType=BIGINT},
        #{modifyOn, jdbcType=BIGINT},
        #{modifyTime, jdbcType=BIGINT}
        )
        <selectKey order="AFTER" keyProperty="roleId" resultType="java.lang.Long">SELECT @@IDENTITY as roleId</selectKey>
    </insert>
    <!--批量插入-->
    <insert id="batchAdd" parameterType="java.util.List" useGeneratedKeys="true">
        INSERT INTO ts_role ( 
        <include refid="columns"/>
        ) VALUES 
        <foreach separator="," index="index" item="item" collection="list"> 
            (
            #{item.roleId, jdbcType=BIGINT},
            #{item.roleName, jdbcType=VARCHAR},
            #{item.roleCode,jdbcType=VARCHAR},
            #{item.enableFlag, jdbcType=INTEGER},
            #{item.comment, jdbcType=VARCHAR},
            #{item.deleteFlag, jdbcType=INTEGER},
            #{item.createOn, jdbcType=BIGINT},
            #{item.createTime, jdbcType=BIGINT},
            #{item.modifyOn, jdbcType=BIGINT},
            #{item.modifyTime, jdbcType=BIGINT}
            )
        </foreach>
    </insert>
    <!--根据主键假删除-->
    <update id="removeById" parameterType="java.lang.Long"> 
        UPDATE ts_role SET delete_flag = 1 where role_id = #{roleId,jdbcType=BIGINT} 
    </update>
    <!--根据条件假删除-->
    <update id="remove" parameterType="com.zhskg.bag.param.RoleParam">
        UPDATE ts_role SET delete_flag = 1
        <where>
            <if test="roleName != null and roleName !=''"> AND role_name LIKE '%${roleName}%'</if>
            <if test="roleCode != null and roleCode !=''"> AND role_code = #{roleCode,jdbcType=VARCHAR}</if>
        </where>
    </update>
    <!--根据主键删除-->
    <delete id="realRemoveById" parameterType="java.lang.Long"> 
        delete from ts_role where role_id = #{roleId,jdbcType=BIGINT} 
    </delete>
    <!--根据条件删除-->
    <delete id="realRemove" parameterType="com.zhskg.bag.param.RoleParam">
        delete from ts_role
        <where>
            <if test="roleName != null and roleName !=''"> AND role_name LIKE '%${roleName}%'</if>
            <if test="roleCode != null and roleCode !=''"> AND role_code = #{roleCode,jdbcType=VARCHAR}</if>
        </where>
    </delete>
    <!--根据主键查询-->
    <select id="get" resultMap="roleMap" parameterType="java.lang.Long">
        SELECT  
        <include refid="columns"/> 
        FROM ts_role WHERE role_id = #{roleId,jdbcType=BIGINT}
    </select>
    <!--根据条件查询返回第一行-->
    <select id="getFirst" resultMap="roleMap" parameterType="com.zhskg.bag.param.RoleParam">
        SELECT  
        <include refid="columns"/> 
        FROM ts_role
        <where>
            AND delete_flag = 0
            <if test="roleName != null and roleName !=''"> AND role_name LIKE '%${roleName}%'</if>
            <if test="roleCode != null and roleCode !=''"> AND role_code = #{roleCode,jdbcType=VARCHAR}</if>
        </where>
        ORDER BY create_on DESC LIMIT 0,1
    </select>
    <select id="getDefaultRoleByAccountId" resultMap="roleMap">
        SELECT
        <include refid="columns"/>
        FROM ts_role
        WHERE delete_flag = 0 AND role_id IN (SELECT role_id FROM ts_account_role WHERE default_flag = 1 AND account_id = #{accountId,jdbcType=BIGINT})
        ORDER BY create_on DESC LIMIT 0,1
    </select>
    <!--根据条件查询-->
    <select id="getList" resultMap="roleMap" parameterType="com.zhskg.bag.param.RoleParam">
        SELECT 
        <include refid="columns"/>
        FROM ts_role
        <where>
          AND delete_flag = 0
          <if test="roleName != null and roleName != ''"> AND role_name LIKE '%${roleName}%'</if>
          <if test="roleCode != null and roleCode !=''"> AND role_code = #{roleCode,jdbcType=VARCHAR}</if>
        </where>
    </select>
    <!--根据条件分页查询-->
    <select id="getPageList" resultMap="roleMap">
        SELECT 
        <include refid="columns"/>
        FROM ts_role 
        <where>
            AND delete_flag = 0
            <if test="condition.keywords != '' and condition.keywords != null "> AND (roleName LIKE '%${condition.keywords}%' OR roleCode LIKE '%${condition.keywords}%') </if>
            <if test="condition.roleName != null and condition.roleName !=''"> AND role_name LIKE '%${condition.roleName}%'</if>
            <if test="condition.roleCode != null and condition.roleCode !=''"> AND role_code = #{condition.roleCode,jdbcType=VARCHAR}</if>
        </where>
        ORDER BY create_on DESC LIMIT #{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </select>
    <!--根据条件查询记录总数-->
    <select id="getCount" parameterType="com.zhskg.bag.param.RoleParam" resultType="java.lang.Integer">
        SELECT COUNT(*) 
        FROM ts_role
        <where>
            AND delete_flag = 0
            <if test=" keywords != '' and keywords != null "> AND (roleName LIKE '%${keywords}%' OR roleCode LIKE '%${keywords}%') </if>
            <if test="roleName != null and roleName !=''"> AND role_name LIKE '%${roleName}%'</if>
            <if test="roleCode != null and roleCode !=''"> AND role_code = #{roleCode,jdbcType=VARCHAR}</if>
        </where>
    </select>
    <!--根据主键修改-->
	<update id="updateById" parameterType="com.zhskg.bag.entity.Role">
		UPDATE ts_role
        <trim prefix="set" suffixOverrides=",">
            <if test="roleName != null">role_name = #{roleName, jdbcType=VARCHAR}, </if>
            <if test="roleCode != null">role_code = #{roleCode,jdbcType=VARCHAR},</if>
            <if test="enableFlag != null">enable_flag = #{enableFlag, jdbcType=INTEGER}, </if>
            <if test="comment != null">comment = #{comment, jdbcType=VARCHAR}, </if>
            <if test="deleteFlag != null">delete_flag = #{deleteFlag, jdbcType=INTEGER}, </if>
            <if test="createOn != null">create_on = #{createOn, jdbcType=BIGINT}, </if>
            <if test="createTime != null">create_time = #{createTime, jdbcType=BIGINT}, </if>
            <if test="modifyOn != null">modify_on = #{modifyOn, jdbcType=BIGINT}, </if>
            <if test="modifyTime != null">modify_time = #{modifyTime, jdbcType=BIGINT}</if>
        </trim>
        WHERE role_id = #{roleId,jdbcType=BIGINT}
	</update>
    <!--根据条件修改-->
	<update id="update">
		UPDATE ts_role 
        <trim prefix="set" suffixOverrides=",">
            <if test="role.roleName != null">role_name = #{role.roleName, jdbcType=VARCHAR}, </if>
            <if test="role.roleCode != null">role_code = #{role.roleCode,jdbcType=VARCHAR},</if>
            <if test="role.enableFlag != null">enable_flag = #{role.enableFlag, jdbcType=INTEGER}, </if>
            <if test="role.comment != null">comment = #{role.comment, jdbcType=VARCHAR}, </if>
            <if test="role.deleteFlag != null">delete_flag = #{role.deleteFlag, jdbcType=INTEGER}, </if>
            <if test="role.createOn != null">create_on = #{role.createOn, jdbcType=BIGINT}, </if>
            <if test="role.createTime != null">create_time = #{role.createTime, jdbcType=BIGINT}, </if>
            <if test="role.modifyOn != null">modify_on = #{role.modifyOn, jdbcType=BIGINT}, </if>
            <if test="role.modifyTime != null">modify_time = #{role.modifyTime, jdbcType=BIGINT}</if>
        </trim>
        <where>
            <if test="condition.roleName != null and condition.roleName !=''"> AND role_name LIKE '%${condition.roleName}%'</if>
            <if test="condition.roleCode != null and condition.roleCode !=''"> AND role_code = #{condition.roleCode,jdbcType=VARCHAR}</if>
        </where>
	</update>
</mapper>