package com.zhs.core.util.zip;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.ZipOutputStream;

/**
 * zip打包工具
 * @author psc
 *
 */
public class FileToZip {
	private String zipPath;
	private ZipOutputStream out;
	private List<ZipVO> zipList = new ArrayList<ZipVO>();
	
	/**
	 * @param zipPath eq:c:/xx.zip
	 */
	public FileToZip(String zipPath){
		this.zipPath = zipPath;
	}
	/**
	 * 添加打包的文件信息
	 * @param directoryName 压缩包的第一级目录名  可以为空
	 * @param files 要打包的文件集合 (只能是文件集合)
	 * @param saveFileNames 文件在文件夹中保存的名称 可以为空
	 * @throws IOException
	 */
	public void addZipInfo(String directoryName,List<File> files,List<String> saveFileNames){
		zipList.add(new ZipVO(directoryName, files, saveFileNames));
	}
	/**
	 * 添加打包信息
	 * @param zip 一个zipVO对象
	 * @throws IOException
	 */
	public void addZipInfo(ZipVO zip){
		if(zip!=null){
			zipList.add(zip);
		}
	}
	/**
	 * 创建zip文件
	 * @param zipPath
	 * @return
	 * @throws IOException
	 */
	private ZipOutputStream createZipFile() throws IOException{
		File zipFile = new File(zipPath);
		if(!zipFile.exists()){
			zipFile.getParentFile().mkdirs();
			zipFile.createNewFile();
		}else if(zipFile.isDirectory()){
			System.out.println(zipFile.getPath()+"不是有效的zip文件");
		}
		return new ZipOutputStream(new FileOutputStream(zipPath));
	}
	/**
	 * 开始执行写入函数
	 * @throws IOException
	 */
	public void write() throws IOException{
		try {
			out = createZipFile();
			for (ZipVO zip : zipList) {
				zip.start(out);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			if(out!=null){
				out.flush();
				out.close();
			}
		}
	}
}
